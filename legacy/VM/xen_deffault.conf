
Values:

vncpasswd=NAME       Password for VNC console on HVM domain.
vncviewer=no|yes     Spawn a vncviewer listening for a vnc server in the
                     domain.
                     The address of the vncviewer is passed to the domain
                     on the kernel command line using
                     'VNC_SERVER=<host>:<port>'. The port used by vnc is
                     5500 + DISPLAY. A display value with a free port is
                     chosen if possible.
                     Only valid when vnc=1.
vncconsole=no|yes    Spawn a vncviewer process for the domain's graphical
                     console.
                     Only valid when vnc=1.
name=NAME            Domain name. Must be unique.
bootloader=FILE      Path to bootloader.
bootargs=NAME        Arguments to pass to boot loader
bootentry=NAME       DEPRECATED. Entry to boot via boot loader. Use
                     bootargs.
kernel=FILE          Path to kernel image.
ramdisk=FILE         Path to ramdisk.
features=FEATURES    Features to enable in guest kernel
builder=FUNCTION     Function to use to build the domain.
memory=MEMORY        Domain memory in MB.
maxmem=MEMORY        Maximum domain memory in MB.
shadow_memory=MEMORY Domain shadow memory in MB.
cpu=CPU              CPU to run the VCPU0 on.
cpus=CPUS            CPUS to run the domain on.
rtc_timeoffset=RTC_TIMEOFFSET
                     Set RTC offset.
pae=PAE              Disable or enable PAE of HVM domain.
timer_mode=TIMER_MODE
                     Timer mode (0=delay virtual time when ticks are
                     missed;
                     1=virtual time is always wallclock time.
acpi=ACPI            Disable or enable ACPI of HVM domain.
apic=APIC            Disable or enable APIC mode.
vcpus=VCPUS          # of Virtual CPUS in domain.
vcpu_avail=VCPUS     Bitmask for virtual CPUs to make available
                     immediately.
vhpt=VHPT            Log2 of domain VHPT size for IA64.
cpu_cap=CAP          Set the maximum amount of cpu.
                     CAP is a percentage that fixes the maximum amount of
                     cpu.
cpu_weight=WEIGHT    Set the cpu time ratio to be allocated to the domain.
restart=onreboot|always|never
                     Deprecated. Use on_poweroff, on_reboot, and on_crash
                     instead.
                     Whether the domain should be restarted on exit.
                     - onreboot: restart on exit with shutdown code reboot
                     - always: always restart on exit, ignore exit code
                     - never: never restart on exit, ignore exit code
on_poweroff=destroy|restart|preserve|rename-restart
                     Behaviour when a domain exits with reason 'poweroff'.
                     - destroy: the domain is cleaned up as normal;
                     - restart: a new domain is started in place of the
                     old one;
                     - preserve: no clean-up is done until the domain is
                     manually
                     destroyed (using xm destroy, for example);
                     - rename-restart: the old domain is not cleaned up,
                     but is
                     renamed and a new domain started in its place.
on_reboot=destroy|restart|preserve|rename-restart
                     Behaviour when a domain exits with reason 'reboot'.
                     - destroy: the domain is cleaned up as normal;
                     - restart: a new domain is started in place of the
                     old one;
                     - preserve: no clean-up is done until the domain is
                     manually
                     destroyed (using xm destroy, for example);
                     - rename-restart: the old domain is not cleaned up,
                     but is
                     renamed and a new domain started in its place.
on_crash=destroy|restart|preserve|rename-restart
                     Behaviour when a domain exits with reason 'crash'.
                     - destroy: the domain is cleaned up as normal;
                     - restart: a new domain is started in place of the
                     old one;
                     - preserve: no clean-up is done until the domain is
                     manually
                     destroyed (using xm destroy, for example);
                     - rename-restart: the old domain is not cleaned up,
                     but is
                     renamed and a new domain started in its place.
blkif=no|yes         Make the domain a block device backend.
netif=no|yes         Make the domain a network interface backend.
tpmif=no|yes         Make the domain a TPM interface backend.
disk=phy:DEV,VDEV,MODE[,DOM]
                     Add a disk device to a domain. The physical device is
                     DEV,
                     which is exported to the domain as VDEV. The disk is
                     read-only if MODE
                     is 'r', read-write if MODE is 'w'. If DOM is
                     specified it defines the
                     backend driver domain to use for the disk.
                     The option may be repeated to add more than one disk.
pci=BUS:DEV.FUNC     Add a PCI device to a domain, using given params (in
                     hex).
                     For example 'pci=c0:02.1a'.
                     The option may be repeated to add more than one pci
                     device.
ioports=FROM[-TO]    Add a legacy I/O range to a domain, using given
                     params (in hex).
                     For example 'ioports=02f8-02ff'.
                     The option may be repeated to add more than one i/o
                     range.
irq=IRQ              Add an IRQ (interrupt line) to a domain.
                     For example 'irq=7'.
                     This option may be repeated to add more than one IRQ.
vfb=type={vnc,sdl},vncunused=1,vncdisplay=N,vnclisten=ADDR,display=DISPLAY,xauthority=XAUTHORITY,vncpasswd=PASSWORD
                     Make the domain a framebuffer backend.
                     The backend type should be either sdl or vnc.
                     For type=vnc, connect an external vncviewer. The
                     server will listen
                     on ADDR (default 127.0.0.1) on port N+5900. N
                     defaults to the
                     domain id. If vncunused=1, the server will try to
                     find an arbitrary
                     unused port above 5900. vncpasswd overrides the XenD
                     configured
                     default password.
                     For type=sdl, a viewer will be started automatically
                     using the
                     given DISPLAY and XAUTHORITY, which default to the
                     current user's
                     ones.
vif=type=TYPE,mac=MAC,bridge=BRIDGE,ip=IPADDR,script=SCRIPT,backend=DOM,vifname=NAME,rate=RATE,model=MODEL,accel=ACCEL
                     Add a network interface with the given MAC address
                     and bridge.
                     The vif is configured by calling the given
                     configuration script.
                     If type is not specified, default is netfront.
                     If mac is not specified a random MAC address is used.
                     If not specified then the network backend chooses
                     it's own MAC address.
                     If bridge is not specified the first bridge found is
                     used.
                     If script is not specified the default script is
                     used.
                     If backend is not specified the default backend
                     driver domain is used.
                     If vifname is not specified the backend virtual
                     interface will have name vifD.N
                     where D is the domain id and N is the interface id.
                     If rate is not specified the default rate is used.
                     If model is not specified the default model is used.
                     If accel is not specified an accelerator plugin
                     module is not used.
                     This option may be repeated to add more than one vif.
                     Specifying vifs will increase the number of
                     interfaces as needed.
vtpm=instance=INSTANCE,backend=DOM,type=TYPE
                     Add a TPM interface. On the backend side use the
                     given
                     instance as virtual TPM instance. The given number is
                     merely the
                     preferred instance number. The hotplug script will
                     determine
                     which instance number will actually be assigned to
                     the domain.
                     The associtation between virtual machine and the TPM
                     instance
                     number can be found in /etc/xen/vtpm.db. Use the
                     backend in the
                     given domain.
                     The type parameter can be used to select a specific
                     driver type
                     that the VM can use. To prevent a fully virtualized
                     domain (HVM)
                     from being able to access an emulated device model,
                     you may specify
                     'paravirtualized' here.
access_control=policy=POLICY,label=LABEL
                     Add a security label and the security policy
                     reference that defines it.
                     The local ssid reference is calculated when
                     starting/resuming the domain. At
                     this time, the policy is checked against the active
                     policy as well. This way,
                     migrating through save/restore is covered and local
                     labels are automatically
                     created correctly on the system where a domain is
                     started / resumed.
nics=NUM             DEPRECATED. Use empty vif entries instead.
                     Set the number of network interfaces.
                     Use the vif option to define interface parameters,
                     otherwise
                     defaults are used. Specifying vifs will increase the
                     number of interfaces as needed.
root=DEVICE          Set the root= parameter on the kernel command line.
                     Use a device, e.g. /dev/sda1, or /dev/nfs for NFS
                     root.
extra=ARGS           Set extra arguments to append to the kernel command
                     line.
ip=IPADDR            Set the kernel IP interface address.
gateway=IPADDR       Set the kernel IP gateway.
netmask=MASK         Set the kernel IP netmask.
hostname=NAME        Set the kernel IP hostname.
interface=INTF       Set the kernel IP interface name.
dhcp=off|dhcp        Set the kernel dhcp option.
nfs_server=IPADDR    Set the address of the NFS server for NFS root.
nfs_root=PATH        Set the path of the root NFS directory.
device_model=FILE    Path to device model program.
fda=FILE             Path to fda
fdb=FILE             Path to fdb
serial=FILE          Path to serial or pty or vc
monitor=no|yes       Should the device model use monitor?
localtime=no|yes     Is RTC set to localtime?
keymap=FILE          Set keyboard layout used
usb=no|yes           Emulate USB devices?
usbdevice=NAME       Name of USB device to add?
guest_os_type=NAME   Guest OS type running in HVM
stdvga=no|yes        Use std vga or cirrhus logic graphics
isa=no|yes           Simulate an ISA only system?
boot=a|b|c|d         Default boot device
nographic=no|yes     Should device models use graphics?
soundhw=audiodev     Should device models enable audio device?
vnc                  Should the device model use VNC?
vncdisplay           VNC display to use
vnclisten            Address for VNC server to listen on.
vncunused            Try to find an unused port for the VNC server.
                     Only valid when vnc=1.
sdl                  Should the device model use SDL?
display=DISPLAY      X11 display to use
xauthority=XAUTHORITY
                     X11 Authority to use
uuid                 xenstore UUID (universally unique identifier) to use.
                     One
                     will be randomly generated if this option is not set,
                     just like MAC
                     addresses for virtual network interfaces. This must
                     be a unique
                     value across the entire cluster.
on_xend_start=ignore|start
                     Action to perform when xend starts
on_xend_stop=ignore|shutdown|suspend
                     Behaviour when Xend stops:
                     - ignore: Domain continues to run;
                     - shutdown: Domain is shutdown;
                     - suspend: Domain is suspended;

