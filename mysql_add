#!/usr/bin/perl -w
#
# mysql_add
#
# Adds a new mysql user and database, generates random password and
# emails it to user. If database/user already exists, will reset
# password instead.
#
# $Id: mysql_add,v 1.3 2003/06/11 10:43:59 dizer Exp dizer $
#

use DBI;
use strict;

# Ask a question. Arguments: (default value, "question").
# Will not accept null (empty) answers when no default is provided.
# If default set to "OPT", null answers will be accepted.
#
sub ask($$)
{
	my ($def, $msg) = (shift, shift);
	my $ans;
	while (!$ans) {
		print "$msg\n[" . (defined($def) ? ($def eq 'OPT' ? "OPTIONAL" : $def) : "no default") . "] >> ";
		$ans = <STDIN>;
		chomp($ans);
		if ($def and !$ans) {
			$ans = $def;
		}
		print "\n";
	}
	return $ans eq 'OPT' ? undef : $ans;
}

# Ask a yes/no question. Arguments: (default value, "question").
# Will not accept null (empty) answers when no default is provided.
# Returns boolean value.
#
sub yesno($$)
{
	my ($def, $msg) = (shift, shift);
	my $ans;
	my $val = -1;

	if (defined($def)) {
		$def = $def ? 'yes' : 'no';
	}

	while ($val < 0) {
		print "$msg\n[" . ($def ? "$def" : "no default") . "] (Y/N) >> ";
		$ans = <STDIN>;
		chomp($ans);
		if ($def and !$ans) {
			$ans = $def;
		}
		if ($ans =~ /^[yY].*$/) {
			$val = 1;
		} elsif ($ans =~ /^[nN].*$/) {
			$val = 0;
		}
		print "\n";
	}
	return $val;
}

sub mkpasswd()
{
	my @passchars = qw ( a b c d e f g h i j k m n p q r s t u v w x y z A B C D E F G H J K L M N P Q R S T U V W X Y Z 2 3 4 5 6 7 8 9 );
	my ($c, $password) = (0, "");

	for ($c = 0; $c < 8; $c++) {
		my $rnd = int rand ($#passchars + 1);
		$password .= $passchars[$rnd];
	}

	return $password;
}

my ($admpassword, $dbh, $dbname, $username, $passwd, $email, $sql, $dbexists, $userexists, $dbuserexists, @results);

system("stty -echo");
print "Password for user root to connect to MySQL: ";
$admpassword = <STDIN>;
chomp($admpassword);
system("stty echo");
print "\n";

$dbh = DBI->connect("DBI:mysql:mysql:host=mysql.internal", "root", $admpassword, {PrintError => 0}) or die("Can't make a connection to the mysql server.\n The error: $DBI::errstr");

if ($ARGV[0]) {
	$dbname = $username = $ARGV[0];
	$email = "$username\@redbrick.dcu.ie";
} else {
	$dbname = ask(undef, "Database name");
	$username = ask($dbname, "Username");
	$email = ask("$username\@redbrick.dcu.ie", "Email password to");
}

$passwd = mkpasswd();

$sql = $dbh->prepare("show databases") or die($dbh->errstr);
$sql->execute() or die($dbh->errstr);

while (@results = $sql->fetchrow_array()) {
	if ($results[0] eq $dbname) {
		print "Database already exists, skipping database creation.\n";
		$dbexists = 1;
		last;
	}
}
$sql->finish();

if (! $dbexists) {
	$dbh->do("create database $dbname") or die($dbh->errstr);
}

$sql = $dbh->prepare("select * from user where host = ? and user = ?") or die($dbh->errstr);
#$sql = $dbh->prepare("show grants for ?@?");
$sql->execute('%.internal',$username) or die($dbh->errstr);
$sql->finish();

if ($sql->rows() == 1) {
	$userexists = 1;
}

if (! $userexists) {
	$sql = $dbh->prepare('GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, EXECUTE, CREATE ROUTINE, ALTER ROUTINE ON `' . $dbname . '`.* TO \'' . $username . '\'@\'%.internal\' IDENTIFIED BY ? WITH GRANT OPTION');
	$sql->execute($passwd);
	$sql->finish();
#	if ($sql->rows() != 1) {
#		die("failed to add host/user/password combination");
#	}
} else {
	if (yesno(undef, "host/user/password combination already exists, reset password")) {
		$sql = $dbh->prepare("update user set password = password(?) where user = ? and host = ?") or die($dbh->errstr);
		$sql->execute($passwd, $username, '%.internal') or die($dbh->errstr);
		$sql->finish();
		if ($sql->rows() != 1) {
			die("failed to update host/user/password combination, possible reason:" . $dbh->errstr);
		}
	}
}

#$sql = $dbh->prepare("select * from db where host = ? and db = ? and user = ?") or die($dbh->errstr);
#$sql->execute('%.internal', $dbname, $username) or die($dbh->errstr);
#$sql->finish();

#if ($sql->rows() == 1) {
#	print "host/user/database combination already exists, skipping creation.\n";
#	$dbuserexists = 1;
#}

#if (! $dbuserexists) {
#	$sql = $dbh->prepare("insert into db (Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Drop_priv,Grant_priv,References_priv,Index_priv,Alter_priv) values ('' , ?, ?, 'Y','Y','Y','Y','Y','Y','Y','Y','Y','Y')");
#	$sql->execute($dbname, $username) or die($dbh->errstr);
#	$sql->finish();
#}

#if ($sql->rows() != 1) {
#	die("failed to add host/user/database combination");
#}

$dbh->do("flush privileges") or die("Can't flush privileges\n$dbh->errstr");
$dbh->disconnect();

print <<"EOF";
hostname: mysql.internal
database: $dbname
username: $username
password: $passwd
EOF

open(PIPE, "| /usr/sbin/sendmail -t");
print PIPE <<"EOF";
From: RedBrick Admin Team <elected-admins\@redbrick.dcu.ie>
Subject: Your RedBrick MySQL Account
To: $email

Your MySQL account details are:

hostname: mysql.internal
database: $dbname
username: $username
password: $passwd

EOF

